openapi: 3.0.0
info:
  description: GUI API
  version: '1.0'
  title: gui
servers:
  - url: /api/v1.0

security:
  - JWT: []

paths:
  /gui/app-info:
    get:
      tags:
        - login
      summary: information about the current app
      operationId: appInformation
      responses:
        200:
          description: the app information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppInformation'
  /gui/oauth2-clients:
    get:
      tags:
        - login
      summary: a list of all available oauth2-clients
      operationId: oauth2Clients
      parameters:
        - in: header
          name: "User-Agent"
          schema:
            type: string
      responses:
        200:
          description: the oauth2-clients
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Oauth2Client'
  /gui/current-user:
    get:
      tags:
        - login
      summary: load current user from security context
      operationId: currentUser
      parameters:
        - in: header
          name: "X-Refresh-Token"
          schema:
            type: string
      responses:
        200:
          description: The user logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: No user logged in
    post:
      tags:
        - login
      summary: submit the token from native App login
      operationId: nativeAppLogin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NativeLogin'
      responses:
        200:
          description: The user logged in
        400:
          description: User not logged in
  /gui/member/application/take-over:
    put:
      tags:
        - onboarding
      summary: take-over the member application form
      operationId: takeoverMemberApplicationForm
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                taskId:
                  type: string
      responses:
        200:
          description: Take-over successfully
  /gui/member/application:
    get:
      tags:
        - onboarding
      summary: load the member application form
      operationId: loadMemberApplicationForm
      responses:
        200:
          description: Submission successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberApplicationForm'
    post:
      tags:
        - onboarding
      summary: submit the member application form
      operationId: submitMemberApplicationForm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberApplicationForm'
      responses:
        200:
          description: Submission successfully
          content:
            application/json:
              schema:
                type: string
        400:
          description: Some application values are not accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrors'
  /gui/member/{memberId}/prefer-notifications-per-sms:
    post:
      tags:
        - member
      summary: Set prefered way for notifications
      operationId: setPreferedWayForNotifications
      parameters:
        - in: path
          name: memberId
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          text/plain:
            schema:
              type: string
      responses:
        200:
          description: The setting was saved
        404:
          description: The member-id is unknown
  /gui/member/{memberId}/avatar:
    get:
      tags:
        - member
      summary: load avatar for given member id
      operationId: avatarOfMember
      parameters:
        - in: path
          name: memberId
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: The avatar as PNG-stream
          content:
            image/png:
              schema:
                type: string
                format: binary
        404:
          description: The member-id is unknown
    post:
      tags:
        - member
      summary: upload avatar for given member id
      operationId: uploadAvatar
      parameters:
        - in: path
          name: memberId
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          image/png:
            schema:
              type: string
              format: binary
      responses:
        200:
          description: The avatar as PNG-stream was saved
  /gui/member/{memberId}:
    get:
      tags:
        - member
      summary: load details for given member id
      operationId: getMemberDetails
      parameters:
        - in: path
          name: memberId
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: The member details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
        404:
          description: The member-id is unknown
  /gui/member/phone-code:
    put:
      tags:
        - member
      summary: Request a code sent to phone via SMS
      operationId: requestPhoneCode
      requestBody:
        content:
          text/plain:
            schema:
              type: string
      responses:
        200:
          description: The code was sent
        400:
          description: phone number is wrong format
        404:
          description: The member-id is unknown
    post:
      tags:
        - member
      summary: Changes the users phone number
      operationId: changePhoneNumber
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CodeBasedChange'
      responses:
        200:
          description: Number successfully changed
        400:
          description: phone number is wrong format
        404:
          description: The member-id is unknown
  /gui/member/email-code:
    put:
      tags:
        - member
      summary: Request a code sent via email
      operationId: requestEmailCode
      requestBody:
        content:
          text/plain:
            schema:
              type: string
      responses:
        200:
          description: The code was sent
        400:
          description: email address is wrong format
        404:
          description: The member-id is unknown
    post:
      tags:
        - member
      summary: Changes the users email address
      operationId: changeEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CodeBasedChange'
      responses:
        200:
          description: Email successfully changed
        400:
          description: Email is wrong format
        404:
          description: The member-id is unknown
  /gui/member/driver-activities/{year}:
    get:
      tags:
        - reservation
      summary: All driver activities of one year
      operationId: getDriverActivitiesOfYear
      parameters:
        - in: path
          name: year
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: The activities
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - $ref: '#/components/schemas/ShiftReservation'
                    - $ref: '#/components/schemas/CarSharingReservation'
                    - type: object
                      required:
                        - type
                      properties:
                        type:
                          $ref: '#/components/schemas/ReservationType'
  /gui/member/driver-activities:
    get:
      tags:
        - reservation
      summary: Overview about driver activities grouped by year
      operationId: getDriverActivities
      responses:
        200:
          description: The overview
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DriverActivities'
  /gui/planner/calendar:
    post:
      tags:
        - planner
      summary: The calendar for car-sharing/passenger-service
      operationId: getPlannerCalendar
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlannerCalendarRequest'
      responses:
        200:
          description: The calender
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlannerCalendar'
  /gui/planner/shift/{shiftId}/claim:
    patch:
      tags:
        - planner
      summary: Claim a shift as a driver
      operationId: claimShift
      parameters:
        - in: path
          name: shiftId
          required: true
          schema:
            type: string
      responses:
        200:
          description: Claiming accepted
        404:
          description: Shift not found
        409:
          description: Shift claimed by someone else
  /gui/planner/shift/{shiftId}/unclaim:
    patch:
      tags:
        - planner
      summary: Unclaim a shift as a driver
      operationId: unclaimShift
      parameters:
        - in: path
          name: shiftId
          required: true
          schema:
            type: string
      responses:
        200:
          description: Unclaiming accepted
        404:
          description: Shift not found
        409:
          description: Shift claimed by someone else
  /gui/planner/shift/{shiftId}/request-swap:
    patch:
      tags:
        - planner
      summary: Request swap of drivers of a shift by current user
      operationId: requestSwapOfShift
      parameters:
        - in: path
          name: shiftId
          required: true
          schema:
            type: string
      responses:
        200:
          description: Swap initiated accepted
        404:
          description: Shift not found
        409:
          description: Swap already in progress
    post:
      tags:
        - planner
      summary: Confirm swap of drivers of a shift by current user
      operationId: confirmSwapOfShift
      parameters:
        - in: path
          name: shiftId
          required: true
          schema:
            type: string
      responses:
        200:
          description: Swap completed
        404:
          description: Shift not found
        409:
          description: No swap in progress
    delete:
      tags:
        - planner
      summary: cancel swap of drivers of a shift by current user or reject if current user is driver
      operationId: cancelOrRejectSwapOfShift
      parameters:
        - in: path
          name: shiftId
          required: true
          schema:
            type: string
      responses:
        200:
          description: Swap completed
        404:
          description: Shift not found
        409:
          description: No swap in progress
  /gui/planner/shift/{shiftId}/request-swap/{driverMemberIdRequestingSwap}:
    patch:
      tags:
        - planner
      summary: Request swap of drivers of a shift by an administrator
      operationId: requestSwapOfShiftByAdministrator
      parameters:
        - in: path
          name: shiftId
          required: true
          schema:
            type: string
        - in: path
          name: driverMemberIdRequestingSwap
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Swap initiated accepted
        400:
          description: Unknown member or member is not a driver
        404:
          description: Shift not found
        409:
          description: Swap already in progress
  /gui/passenger-service/shift-overview:
    get:
      tags:
        - passenger-service
      summary: The shifts within the next two weeks
      operationId: getShiftOverview
      responses:
        200:
          description: The shift-overview
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShiftOverview'
  /gui/passenger-service/my-shifts:
    get:
      tags:
        - passenger-service
      operationId: getUpcomingPassengerServiceShifts
      summary: All upcoming shifts of the member logged in
      responses:
        200:
          description: My shifts planned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShiftReservation'
    post:
      tags:
        - passenger-service
      summary: All shifts of the member logged in
      operationId: getMyShifts
      parameters:
        - in: query
          name: pageNumber
          schema:
            type: integer
            format: int32
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: My shifts planned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shifts'
  /gui/car-sharing/reservations:
    get:
      tags:
        - car-sharing
      summary: The reservations of the member currently logged in
      operationId: getCarSharingReservations
      responses:
        200:
          description: The shift-overview
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CarSharingReservation'
  /gui/car-sharing/{carId}/reservation:
    post:
      tags:
        - car-sharing
      summary: Take a car-sharing reservation
      operationId: addCarSharingReservation
      parameters:
        - in: path
          name: carId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddPlannerReservation'
      responses:
        200:
          description: Reservation accepted
        400:
          description: Input parameters invalid
        404:
          description: Car not found
        409:
          description: Reservation declined due to other reservations
  /gui/car-sharing/{carId}/reservation/{reservationId}/start:
    put:
      tags:
        - car-sharing
      summary: Confirm begin of car-sharing
      operationId: confirmBeginOfCarSharing
      parameters:
        - in: path
          name: carId
          required: true
          schema:
            type: string
        - in: path
          name: reservationId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarSharingStartRequest'
      responses:
        200:
          description: Reservation confirmed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarSharingReservation'
        400:
          description: Wrong parameters
        404:
          description: Reservation not found
  /gui/car-sharing/{carId}/reservation/{reservationId}/stop:
    put:
      tags:
        - car-sharing
      summary: Confirm end of car-sharing
      operationId: confirmEndOfCarSharing
      parameters:
        - in: path
          name: carId
          required: true
          schema:
            type: string
        - in: path
          name: reservationId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarSharingStopRequest'
      responses:
        200:
          description: Reservation confirmed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarSharingReservation'
        400:
          description: Wrong parameters
        404:
          description: Reservation not found
    patch:
      tags:
        - car-sharing
      summary: Extend planned usage of car-sharing
      operationId: extendCarSharing
      parameters:
        - in: path
          name: carId
          required: true
          schema:
            type: string
        - in: path
          name: reservationId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtendCarSharingRequest'
      responses:
        200:
          description: Reservation confirmed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarSharingReservation'
        400:
          description: Wrong parameters
        404:
          description: Reservation not found
  /gui/car-sharing/{carId}/reservation/{reservationId}/cancel:
    delete:
      tags:
        - car-sharing
      summary: Cancel a car-sharing reservation
      operationId: cancelCarSharingReservation
      parameters:
        - in: path
          name: carId
          required: true
          schema:
            type: string
        - in: path
          name: reservationId
          required: true
          schema:
            type: string
      requestBody:
        content:
          text/plain:
            schema:
              type: string
      responses:
        200:
          description: Reservation removed
        400:
          description: Reservation not found
        404:
          description: Car not found
  /gui/car-sharing/{carId}/reservation/{reservationId}/resize:
    put:
      tags:
        - car-sharing
      summary: Change the start- and end-time of a car-sharing reservation
      operationId: resizeCarSharingReservation
      parameters:
        - in: path
          name: carId
          required: true
          schema:
            type: string
        - in: path
          name: reservationId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResizeCarSharingRequest'
      responses:
        200:
          description: Reservation changed
        400:
          description: Reservation not found
        404:
          description: Car not found
components:
  schemas:
    ValidationErrors:
      type: object
      additionalProperties: {}
    Sex:
      type: string
      enum:
        - MALE
        - FEMALE
        - OTHER
    Role:
      type: string
      enum:
        - PASSENGER
        - DRIVER
        - CAR
        - MANAGER
        - ADMIN
    UserStatus:
      type: string
      enum:
        - NEW
        - APPLICATION_SUBMITTED
        - DATA_INVALID
        - REJECTED
        - ACTIVE
        - INACTIVE
    ReservationType:
      type: string
      enum:
        - CS # shortcut of CarSharing
        - BLOCK
        - PS # shortcut of PassenagerService
    ShiftOverviewStatus:
      type: string
      enum:
        - NO_SHIFT # hour has no passenger-service shift
        - FREE     # no car drivers set to shift
        - PARTIAL  # in case of more cars for passenger-service if one car driver is set and the other not
        - COMPLETE # all car drivers set to shift
    ShiftStatus:
      type: string
      enum:
        - UNCLAIMED
        - CLAIMED
        - IN_PROGRESS
        - CANCELLED
        - DONE
    CarSharingStatus:
      type: string
      enum:
        - RESERVED
        - ONGOING
        - COMPLETED
        - CANCELLED
        - NOT_CONFIRMED
    Page:
      type: object
      required:
        - totalElements
        - totalPages
        - number
        - size
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
    AppInformation:
      type: object
      properties:
        titleShort:
          type: string
        titleLong:
          type: string
        homepageUrl:
          type: string
        homepageServiceConditionsUrl:
          type: string
        contactEmailAddress:
          type: string
        version:
          type: string
    NativeLogin:
      type: object
      properties:
        clientId:
          type: string
        oauth2Id:
          type: string
        accessToken:
          type: string
    Oauth2Client:
      type: object
      required:
        - id
        - url
        - name
      properties:
        id:
          type: string
        url:
          type: string
        name:
          type: string
    CodeBasedChange:
      type: object
      properties:
        code:
          type: string
        value:
          type: string
    User:
      type: object
      properties:
        id:
          type: string
        status:
          $ref: '#/components/schemas/UserStatus'
        memberId:
          type: integer
          format: int32
        email:
          type: string
        lastName:
          type: string
        firstName:
          type: string
        sex:
          $ref: '#/components/schemas/Sex'
        avatar:
          type: integer
          format: int32
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Role'
    Member:
      type: object
      properties:
        title:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        birthdate:
          type: string
        sex:
          $ref: '#/components/schemas/Sex'
        zip:
          type: string
        city:
          type: string
        street:
          type: string
        streetNumber:
          type: string
        phoneNumber:
          type: string
        preferNotificationsPerSms:
          type: boolean
    MemberApplicationForm:
      type: object
      properties:
        applicationId:
          type: string
        memberId:
          type: integer
          format: int32
        taskId:
          type: string
        title:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        emailConfirmationCode:
          type: string
        birthdate:
          type: string
        sex:
          $ref: '#/components/schemas/Sex'
        zip:
          type: string
        city:
          type: string
        street:
          type: string
        streetNumber:
          type: string
        phoneNumber:
          type: string
        phoneConfirmationCode:
          type: string
        preferNotificationsPerSms:
          type: boolean
        comment:
          type: string
        applicationComment:
          type: string
    PlannerCalendarRequest:
      type: object
      properties:
        startsAt:
          type: string
          format: date-time
        endsAt:
          type: string
          format: date-time
    PlannerDriver:
      type: object
      required:
        - memberId
      properties:
        memberId:
          type: integer
          format: int32
        firstName:
          type: string
        lastName:
          type: string
        sex:
          $ref: '#/components/schemas/Sex'
        avatar:
          type: integer
          format: int32
        phoneNumber:
          type: string
    PlannerCar:
      type: object
      required:
        - id
        - name
        - shortcut
        - reservations
      properties:
        id:
          type: string
        name:
          type: string
        shortcut:
          type: string
        reservations:
          type: array
          items:
            $ref: '#/components/schemas/PlannerReservation'
    AddPlannerReservation:
      type: object
      required:
        - startsAt
        - endsAt
        - type
        - driverMemberId
      properties:
        startsAt:
          type: string
          format: date-time
        endsAt:
          type: string
          format: date-time
        driverMemberId:
          type: integer
          format: int32
        type:
          $ref: '#/components/schemas/ReservationType'
    PlannerReservation:
      type: object
      required:
        - id
        - startsAt
        - endsAt
        - type
        - status
      properties:
        id:
          type: string
        startsAt:
          type: string
          format: date-time
        endsAt:
          type: string
          format: date-time
        status:
          type: string
        type:
          $ref: '#/components/schemas/ReservationType'
        driverMemberId:
          type: integer
          format: int32
        hasRides:
          type: boolean
        swapInProgressMemberId:
          type: integer
          format: int32
    PlannerCalendar:
      type: object
      required:
        - remainingHours
        - maxHours
        - allowPaidCarSharing
        - drivers
        - cars
      properties:
        remainingHours:
          type: integer
          format: int32
        maxHours:
          type: integer
          format: int32
        allowPaidCarSharing:
          type: boolean
        drivers:
          type: array
          items:
            $ref: '#/components/schemas/PlannerDriver'
        cars:
          type: array
          items:
            $ref: '#/components/schemas/PlannerCar'
    ShiftOverviewWeek:
      type: object
      required:
        - description
        - startsAt
        - endsAt
        - days
      properties:
        description:
          type: string
        startsAt:
          type: string
        endsAt:
          type: string
        days:
          type: array
          items:
            $ref: '#/components/schemas/ShiftOverviewDay'
    ShiftOverviewDay:
      type: object
      required:
        - description
        - date
        - hours
      properties:
        description:
          type: string
        date:
          type: string
        hours:
          type: array
          items:
            $ref: '#/components/schemas/ShiftOverviewHour'
    ShiftOverviewHour:
      type: object
      required:
        - carId
        - status
        - endsAt
      properties:
        description:
          type: string
        carId:
          type: string
        status:
          $ref: '#/components/schemas/ShiftOverviewStatus'
        endsAt:
          type: string
          format: date-time
    ShiftOverview:
      type: object
      required:
        - numberOfCars
        - weeks
        - hasPartials
      properties:
        numberOfCars:
          type: integer
          format: int32
        hasPartials:
          type: boolean
        weeks:
          type: array
          items:
            $ref: '#/components/schemas/ShiftOverviewWeek'
    ShiftEvent:
      type: object
      required:
        - id
        - type
      properties:
        type:
          type: string
        id:
          type: string
    ReservationEvent:
      type: object
      required:
        - id
        - type
        - startsAt
        - endsAt
        - carId
      properties:
        type:
          type: string
        id:
          type: string
        driverMemberId:
          type: integer
          format: int32
        startsAt:
          type: string
        endsAt:
          type: string
        carId:
          type: string
    ShiftReservation:
      type: object
      required:
        - id
        - carId
        - startsAt
        - endsAt
        - status
      properties:
        id:
          type: string
        driverMemberId:
          type: integer
          format: int32
        startsAt:
          type: string
          format: date-time
        kmAtStart:
          type: integer
          format: int32
        endsAt:
          type: string
          format: date-time
        kmAtEnd:
          type: integer
          format: int32
        carId:
          type: string
        carName:
          type: string
        carKm:
          type: integer
          format: int32
        status:
          $ref: '#/components/schemas/ShiftStatus'
        userTaskType:
          type: string
        userTaskId:
          type: string
        usageMinutes:
          type: integer
          format: int64
        swapInProgressMemberId:
          type: integer
          format: int32
    CarSharingReservation:
      type: object
      required:
        - id
        - carId
        - startsAt
        - endsAt
        - status
      properties:
        id:
          type: string
        driverMemberId:
          type: integer
          format: int32
        createdAt:
          type: string
          format: date-time
        startsAt:
          type: string
          format: date-time
        startUsage:
          type: string
          format: date-time
        kmAtStart:
          type: integer
          format: int32
        endsAt:
          type: string
          format: date-time
        endUsage:
          type: string
          format: date-time
        kmAtEnd:
          type: integer
          format: int32
        carStatusComment:
          type: string
        hoursPlanned:
          type: integer
          format: int32
        carId:
          type: string
        carName:
          type: string
        carKm:
          type: integer
          format: int32
        status:
          $ref: '#/components/schemas/CarSharingStatus'
        userTaskType:
          type: string
        userTaskId:
          type: string
        usageMinutes:
          type: integer
          format: int64
    ExtendCarSharingRequest:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        userTaskId:
          type: string
    ResizeCarSharingRequest:
      type: object
      properties:
        startsAt:
          type: string
          format: date-time
        endsAt:
          type: string
          format: date-time
        comment:
          type: string
    CarSharingStartRequest:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        kmStart:
          type: integer
          format: int32
        carStatusComment:
          type: string
        userTaskId:
          type: string
    CarSharingStopRequest:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        kmStart:
          type: integer
          format: int32
        kmEnd:
          type: integer
          format: int32
        carStatusComment:
          type: string
        userTaskId:
          type: string
    Shifts:
      type: object
      required:
        - page
        - shifts
      properties:
        page:
          $ref: '#/components/schemas/Page'
        shifts:
          type: array
          items:
            $ref: '#/components/schemas/ShiftReservation'
    DriverActivities:
      type: object
      required:
        - passengerServiceHours
        - carSharingHours
      properties:
        overview:
          type: list
          items:
            $ref: '#/components/schemas/ReservationOverviewTotal'
        passengerServiceHours:
          type: float
        carSharingHours:
          type: float
    ReservationOverviewTotal:
      type: object
      required:
        - year
        - car-sharing-hours
        - car-sharing-count
        - passenger-service-hours
        - passenger-service-count
      properties:
        year:
          type: integer
          format: int32
        car-sharing-hours:
          type: float
        passenger-service-hours:
          type: float
