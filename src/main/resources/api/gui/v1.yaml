openapi: 3.0.0
info:
  description: GUI API
  version: '1.0'
  title: gui
servers:
  - url: /api/v1.0

security:
  - JWT: []

paths:
  /gui/oauth2-clients:
    get:
      tags:
        - gui
      summary: a list of all available oauth2-clients
      operationId: oauth2Clients
      responses:
        200:
          description: the oauth2-clients
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Oauth2Client'
  /gui/currentUser:
    get:
      tags:
        - gui
      summary: load current user from security context
      operationId: currentUser
      responses:
        200:
          description: The user logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: No user logged in
  /gui/member/application:
    get:
      tags:
        - gui
      summary: load the member application form
      operationId: loadMemberApplicationForm
      responses:
        200:
          description: Submission successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberApplicationForm'
    post:
      tags:
        - gui
      summary: submit the member application form
      operationId: submitMemberApplicationForm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberApplicationForm'
      responses:
        200:
          description: Submission successfully
          content:
            application/json:
              schema:
                type: string
  /gui/member/{memberId}/avatar:
    get:
      tags:
        - gui
      summary: load avatar for given member id
      operationId: avatarOfMember
      parameters:
        - in: path
          name: memberId
          required: true
          schema:
            type: integer
      responses:
        200:
          description: The avatar as PNG-stream
          content:
            image/png:
              schema:
                type: string
                format: binary
        404:
          description: The member-id is unknown
components:
  schemas:
    Sex:
      type: string
      enum:
        - MALE
        - FEMALE
        - OTHER
    Role:
      type: string
      enum:
        - PASSANGER
        - DRIVER
        - MANAGER
        - ADMIN
    UserStatus:
      type: string
      enum:
        - NEW
        - EMAIL_VERIFIED
        - APPLICATION_SUBMITTED
        - DATA_INVALID
        - ACTIVE
        - INACTIVE
        - TO_BE_DELETED
        - REJECTED
        - DUPLICATE
    Oauth2Client:
      type: object
      properties:
        id:
          type: string
        url:
          type: string
        name:
          type: string
    User:
      type: object
      properties:
        id:
          type: string
        status:
          $ref: '#/components/schemas/UserStatus'
        memberId:
          type: int
        email:
          type: string
        name:
          type: string
        firstName:
          type: string
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Role'
    MemberApplicationForm:
      type: object
      properties:
        applicationId:
          type: string
        taskId:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        emailConfirmationCode:
          type: string
        birthdate:
          type: string
          format: date
        sex:
          $ref: '#/components/schemas/Sex'
        zip:
          type: string
        city:
          type: string
        street:
          type: string
        streetNumber:
          type: string
        phoneCountryCode:
          type: string
        phoneProviderCode:
          type: string
        phoneNumber:
          type: string
        phoneConfirmationCode:
          type: string
        preferNotificationsPerSms:
          type: boolean
        comment:
          type: string
      required:
        - firstName
        - lastName
        - birthdate
        - sex
        - zip
        - city
        - street
        - streetNumber
        - email
        - emailConfirmationCode
        - phoneCountryCode
        - phoneProviderCode
        - phoneNumber
        - phoneConfirmationCode
