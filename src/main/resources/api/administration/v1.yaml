openapi: 3.0.0
info:
  description: Administration API
  version: '1.0'
  title: administration
servers:
  - url: /api/v1.0

security:
  - JWT: []

paths:
  /administration/member-onboarding/{applicationId}/take-over:
    put:
      tags:
        - onboarding
      summary: as a member of management board take-over application from member
      operationId: takeoverMemberOnboardingApplication
      parameters:
        - in: path
          name: applicationId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                taskId:
                  type: string
      responses:
        200:
          description: Takeover successful
        400:
          description: application is in wrong status
  /administration/member-onboarding/{applicationId}:
    get:
      tags:
        - onboarding
      summary: get a member onboarding application
      operationId: getMemberOnboardingApplication
      parameters:
        - in: path
          name: applicationId
          required: true
          schema:
            type: string
      responses:
        200:
          description: The updated member onboarding application
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberApplication' 
    put:
      tags:
        - onboarding
      summary: update a member onboarding application
      operationId: updateMemberOnboardingApplication
      parameters:
        - in: path
          name: applicationId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMemberOnboarding'
      responses:
        200:
          description: The updated member onboarding application
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberApplication' 
  /administration/member-onboarding:
    get:
      tags:
        - onboarding
      summary: number of all member onboardings of status IN_PROGRESS
      operationId: getCountOfInprogressMemberOnboardings
      responses:
        200:
          description: Count of all member onboardings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountOfInprogressMemberOnboardings'
    post:
      tags:
        - onboarding
      summary: all member onboarding applications
      operationId: getMemberOnboardingApplications
      parameters:
        - in: query
          name: pageNumber
          schema:
            type: integer
            format: int32
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: All member onboardings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberOnboardingApplications'
  /administration/reservations/shifts:
    get:
      tags:
        - shift
      summary: get all shifts
      operationId: getShifts
      parameters:
        - in: query
          name: startDate
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: endDate
          required: false
          schema:
            type: string
            format: date
      responses:
        200:
          description: The user logged in
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Shift'
  /administration/member/download:
    get:
      tags:
        - member
      summary: Download members in Excel format
      operationId: generateMembersExcelFile
      responses:
        200:
          description: The Excel file
          content:
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                type: string
                format: binary
    post:
      tags:
        - member
      summary: Upload members in Excel format
      operationId: uploadMembersExcelFile
      requestBody:
        content:
          application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
            schema:
              type: string
              format: binary
      responses:
        200:
          description: Successfully uploaded
  /administration/member/{memberId}:
    get:
      tags:
        - member
      summary: details about the requested member
      operationId: getMemberById
      parameters:
        - in: path
          name: memberId
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: The member's details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
    delete:
      tags:
        - member
      summary: delete a member
      operationId: deleteMember
      parameters:
        - in: path
          name: memberId
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: The member's was successfully deleted
    post:
      tags:
        - member
      summary: save member
      operationId: saveMember
      parameters:
        - in: path
          name: memberId
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Member'
      responses:
        200:
          description: The current member's details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
  /administration/car/{carId}/send-test-sms:
    post:
      tags:
        - car
      summary: send a text message via car's tablet Elmo-app to the tablet itself
      operationId: sendTestSms
      parameters:
        - in: path
          name: carId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestTextMessage'
      responses:
        200:
          description: SMS sent
  /administration/car/{carId}/activation-code:
    post:
      tags:
        - car
      summary: car activation app code
      operationId: activateCarApp
      parameters:
        - in: path
          name: carId
          required: true
          schema:
            type: string
      responses:
        200:
          description: Car activation code
          content:
            text/plain:
              schema:
                type: string
    delete:
      tags:
        - car
      summary: car deactivation app
      operationId: deactivateCarApp
      parameters:
        - in: path
          name: carId
          required: true
          schema:
            type: string
      responses:
        200:
          description: Car activation code
  /administration/car/{carId}:
    get:
      tags:
        - car
      summary: car details
      operationId: getCar
      parameters:
        - in: path
          name: carId
          required: true
          schema:
            type: string
      responses:
        200:
          description: Car details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Car'
    post:
      tags:
        - car
      summary: save car details
      operationId: saveCar
      parameters:
        - in: path
          name: carId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Car'
      responses:
        200:
          description: Successfully saved
          content:
            text/plain:
              schema:
                type: string
        400:
          description: Validation failed
    delete:
      tags:
        - car
      summary: delete car
      operationId: deleteCar
      parameters:
        - in: path
          name: carId
          required: true
          schema:
            type: string
      responses:
        200:
          description: Car deleted
        400:
          description: Car already in use
  /administration/car:
    get:
      tags:
        - car
      summary: number of all cars
      operationId: getCountOfCars
      responses:
        200:
          description: Count of all cars
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountOfCars'
    post:
      tags:
        - car
      summary: all cars
      operationId: getCars
      parameters:
        - in: query
          name: pageNumber
          schema:
            type: integer
            format: int32
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: All cars
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cars'
  /administration/member:
    get:
      tags:
        - member
      summary: number of all active members
      operationId: getCountOfActiveMembers
      responses:
        200:
          description: Count of all active members
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountOfActiveMembers'
    post:
      tags:
        - member
      summary: all members
      operationId: getMembers
      parameters:
        - in: query
          name: pageNumber
          schema:
            type: integer
            format: int32
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: query
          schema:
            type: string
      responses:
        200:
          description: All members
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Members'
components:
  schemas:
    Sex:
      type: string
      enum:
        - MALE
        - FEMALE
        - OTHER
    Payment:
      type: string
      enum:
        - MONTHLY
        - ANNUALLY
        - NONE
    Role:
      type: string
      enum:
        - PASSANGER
        - DRIVER
        - CAR
        - MANAGER
        - ADMIN
    MemberStatus:
      type: string
      enum:
        - ACTIVE
        - INACTIVE
        - TO_BE_DELETED
    MemberApplicationStatus:
      type: string
      enum:
        - NEW
        - DATA_INVALID
        - APPLICATION_SUBMITTED
        - ACCEPTED
        - REJECTED
        - DUPLICATE
    MemberApplicationUpdate:
      type: string
      enum:
        - SAVE
        - ACCEPTED
        - REJECT
        - INQUIRY
    Page:
      type: object
      required:
        - totalElements
        - totalPages
        - number
        - size
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
    CountOfInprogressMemberOnboardings:
      type: object
      properties:
        count:
          type: integer
          format: int32
    MemberOnboardingApplications:
      type: object
      required:
        - page
        - applications
      properties:
        page:
          $ref: '#/components/schemas/Page'
        applications:
          type: array
          items:
            $ref: '#/components/schemas/MemberApplication'
    CountOfActiveMembers:
      type: object
      properties:
        count:
          type: integer
          format: int32
    Members:
      type: object
      required:
        - page
        - members
      properties:
        page:
          $ref: '#/components/schemas/Page'
        members:
          type: array
          items:
            $ref: '#/components/schemas/Member'
    TestTextMessage:
      type: object
      properties:
        phoneNumber:
          type: string
    CountOfCars:
      type: object
      properties:
        count:
          type: integer
          format: int32
    Cars:
      type: object
      required:
        - page
        - cars
      properties:
        page:
          $ref: '#/components/schemas/Page'
        cars:
          type: array
          items:
            $ref: '#/components/schemas/Car'
    Car:
      type: object
      required:
        - id
        - name
        - shortcut
        - appActive
        - passangerService
        - carSharing
      properties:
        id:
          type: string
          nullable: true
        shortcut:
          type: string
        name:
          type: string
        phoneNumber:
          type: string
        appActive:
          type: boolean
        lastAppActivity:
          type: string
          format: date-time
        passangerService:
          type: boolean
        carSharing:
          type: boolean
        km:
          type: integer
          format: int32
        kmConfirmed:
          type: boolean
        kmConfirmedAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    UpdateMemberOnboarding:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/MemberApplicationUpdate'
        taskId:
          type: string
        memberApplication:
          $ref: '#/components/schemas/MemberApplication'
    MemberApplication:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          nullable: true
        taskId:
          type: string
        status:
          $ref: '#/components/schemas/MemberApplicationStatus'
        memberId:
          type: int
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        title:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        birthdate:
          type: string
        sex:
          $ref: '#/components/schemas/Sex'
        zip:
          type: string
        city:
          type: string
        street:
          type: string
        streetNumber:
          type: string
        phoneNumber:
          type: string
        preferNotificationsPerSms:
          type: boolean
        comment:
          type: string
        applicationComment:
          type: string
        initialRole:
          $ref: '#/components/schemas/Role'
    Member:
      type: object
      required:
        - id
        - status
        - memberId
        - sex
      properties:
        id:
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/MemberStatus'
        memberId:
          type: integer
          format: int32
        avatar:
          type: integer
          format: int32
        title:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        emailConfirmed:
          type: boolean
        birthdate:
          type: string
        sex:
          $ref: '#/components/schemas/Sex'
        zip:
          type: string
        city:
          type: string
        street:
          type: string
        streetNumber:
          type: string
        phoneNumber:
          type: string
        phoneConfirmed:
          type: boolean
        preferNotificationsPerSms:
          type: boolean
        payment:
          $ref: '#/components/schemas/Payment'
        iban:
          type: string
        comment:
          type: string
        hoursServedPassangerService:
          type: integer
          format: int32
        hoursConsumedCarSharing:
          type: integer
          format: int32
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Role'
    Shift:
      type: object
      properties:
        id:
          type: string
        driverId:
          type: string
        startsAt:
          type: string
          format: date
        endsAt:
          type: string
          format: date
        carId:
          type: string